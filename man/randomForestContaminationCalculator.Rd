% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Statial.R
\name{randomForestContaminationCalculator}
\alias{randomForestContaminationCalculator}
\title{Calculate the level of marker contamination of each cell}
\usage{
randomForestContaminationCalculator(
  singleCellData,
  markers,
  seed = 2022,
  num.trees = 100,
  verbose = FALSE,
  missingReplacement = 0
)
}
\arguments{
\item{singleCellData}{A dataframe with a cellType column as well as marker intensity information
corresponding to each cell. The dataframe must contain a imageID column.}

\item{markers}{A string vector of marker intensities to use to classify cell types and
detect contamination}

\item{seed}{A numeric value to allow for replicable results from the random forest
classification algorithm}

\item{num.trees}{Number of trees to be used in the random forest classifier}

\item{verbose}{A logical indicating whether information about the final random forest
model should be outputted.}

\item{missingReplacement}{A default value to replace missing marker intensities for classification.}
}
\description{
Calculates contamination scores using a random forest classification
}
\examples{
library(dplyr)
data("headSCE")
intensitiesData <- data.frame(t(
  SummarizedExperiment::assay(headSCE, "intensities")
))
spatialData <- data.frame(SummarizedExperiment::colData(headSCE))
markersToUse <- colnames(intensitiesData)
singleCellData <- cbind(
  spatialData[rownames(intensitiesData), ], intensitiesData
)
singleCellData <- singleCellData \%>\%
  mutate(
    across(all_of(markersToUse), function(x) ifelse(is.na(x), 0, x))
  ) \%>\%
  mutate(across(where(is.factor), as.character))

singleCellDataDistancesContam <- randomForestContaminationCalculator(
  singleCellData,
  markers = markersToUse
)

}
