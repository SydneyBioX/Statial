% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R
\name{Accessors}
\alias{Accessors}
\alias{location,segmentedCells-method}
\alias{location<-,segmentedCells-method}
\alias{intensity,segmentedCells-method}
\alias{intensity<-,segmentedCells-method}
\alias{morphology,segmentedCells-method}
\alias{morphology<-,segmentedCells-method}
\alias{phenotype,segmentedCells-method}
\alias{phenotype<-,segmentedCells-method}
\alias{imageID,segmentedCells-method}
\alias{cellType,segmentedCells-method}
\alias{cellType<-,segmentedCells-method}
\alias{imageCellID,segmentedCells-method}
\alias{imageCellID<-,segmentedCells-method}
\alias{cellID,segmentedCells-method}
\alias{cellID<-,segmentedCells-method}
\alias{location}
\alias{location<-}
\alias{intensity}
\alias{intensity<-}
\alias{morphology}
\alias{morphology<-}
\alias{phenotype}
\alias{phenotype<-}
\alias{imageID}
\alias{cellType}
\alias{cellType<-}
\alias{imageCellID}
\alias{imageCellID<-}
\alias{cellID}
\alias{cellID<-}
\alias{region,segmentedCells-method}
\alias{region<-,segmentedCells-method}
\alias{region}
\alias{region<-}
\title{Accessors for segmentedCells}
\usage{
location(x, imageID = NULL, bind = TRUE)

location(x, imageID = NULL) <- value

intensity(x, imageID = NULL, bind = TRUE)

intensity(x, imageID = NULL) <- value

morphology(x, imageID = NULL, bind = TRUE)

morphology(x, imageID = NULL) <- value

phenotype(x, imageID = NULL, bind = TRUE, expand = FALSE)

phenotype(x, imageID = NULL) <- value

imageID(x, imageID = NULL)

cellID(x, imageID = NULL)

cellID(x) <- value

imageCellID(x, imageID = NULL)

imageCellID(x) <- value

cellType(x, imageID = NULL)

cellType(x, imageID = NULL) <- value

location(x, imageID = NULL, bind = TRUE)

location(x, imageID = NULL) <- value

intensity(x, imageID = NULL, bind = TRUE)

intensity(x, imageID = NULL) <- value

morphology(x, imageID = NULL, bind = TRUE)

morphology(x, imageID = NULL) <- value

phenotype(x, imageID = NULL, bind = TRUE, expand = FALSE)

phenotype(x, imageID = NULL) <- value

imageID(x, imageID = NULL)

cellID(x, imageID = NULL)

cellID(x) <- value

imageCellID(x, imageID = NULL)

imageCellID(x) <- value

cellType(x, imageID = NULL)

cellType(x, imageID = NULL) <- value
}
\arguments{
\item{x}{A `segmentedCells` object.}

\item{imageID}{A vector of imageIDs to specifically extract.}

\item{bind}{When false outputs a list of DataFrames split by imageID}

\item{expand}{Used to expand the phenotype information from per image to per cell.}

\item{value}{The relevant information used to replace.}
}
\value{
DataFrame or a list of DataFrames

DataFrame or a list of DataFrames
}
\description{
Methods to access various components of the `segmentedCells` object.

A method for setting and getting regions for a segmentedCells object.
}
\section{Descriptions}{

\describe{
\item{`location`:}{
Retrieves the DataFrame containing `x` and `y` coordinates of each cell as well as `cellID`, `imageID` and `cellType`.
imageID can be used to select specific images and bind=FALSE outputs the information as a list split by imageID.
}

\item{`morphology`:}{
Retrieves the DataFrame containing morphology information.
}

\item{`intensity`:}{
Retrieves the DataFrame containing intensity of gene or protein markers.
}

\item{`phenotype`:}{
Retrieves the DataFrame containing the phenotype information. Using expand = TRUE will produce a DataFrame with the number of rows equal to the number of cells.
}
}


\describe{
\item{`location`:}{
Retrieves the DataFrame containing `x` and `y` coordinates of each cell as well as `cellID`, `imageID` and `cellType`.
imageID can be used to select specific images and bind=FALSE outputs the information as a list split by imageID.
}

\item{`morphology`:}{
Retrieves the DataFrame containing morphology information.
}

\item{`intensity`:}{
Retrieves the DataFrame containing intensity of gene or protein markers.
}

\item{`phenotype`:}{
Retrieves the DataFrame containing the phenotype information. Using expand = TRUE will produce a DataFrame with the number of rows equal to the number of cells.
}
}
}

\examples{
### Something that resembles cellProfiler data

set.seed(51773)

n = 10

cells <- data.frame(row.names = seq_len(n))
cells$ObjectNumber <- seq_len(n)
cells$ImageNumber <- rep(1:2,c(n/2,n/2))
cells$AreaShape_Center_X <- runif(n)
cells$AreaShape_Center_Y <- runif(n)
cells$AreaShape_round <- rexp(n)
cells$AreaShape_diameter <- rexp(n, 2)
cells$Intensity_Mean_CD8 <- rexp(n, 10)
cells$Intensity_Mean_CD4 <- rexp(n, 10)

cellExp <- segmentedCells(cells, cellProfiler = TRUE)

### Cluster cell types
intensities <- intensity(cellExp)
kM <- kmeans(intensities,2)
cellType(cellExp) <- paste('cluster',kM$cluster, sep = '')

location(cellExp, imageID = 1)

### Something that resembles cellProfiler data

set.seed(51773)

n = 10

cells <- data.frame(row.names = seq_len(n))
cells$ObjectNumber <- seq_len(n)
cells$ImageNumber <- rep(1:2,c(n/2,n/2))
cells$AreaShape_Center_X <- runif(n)
cells$AreaShape_Center_Y <- runif(n)
cells$AreaShape_round <- rexp(n)
cells$AreaShape_diameter <- rexp(n, 2)
cells$Intensity_Mean_CD8 <- rexp(n, 10)
cells$Intensity_Mean_CD4 <- rexp(n, 10)

cellExp <- segmentedCells(cells, cellProfiler = TRUE)

### Cluster cell types
intensities <- intensity(cellExp)
kM <- kmeans(intensities,2)
cellType(cellExp) <- paste('cluster',kM$cluster, sep = '')

location(cellExp, imageID = 1)

}
