[{"path":"/articles/Statial.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Statial","text":"","code":"# Install the package from Bioconductor if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {   install.packages(\"BiocManager\") } BiocManager::install(\"Statial\")"},{"path":"/articles/Statial.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Statial","text":"37 trillion cells human body, taking different forms functions. behaviour cells can described canonical characteristics, functions can also dynamically change based environmental context, leading cells diverse states. Understanding changes cell state interplay cells key understanding mechanisms action contribute human disease. Statial suite functions identifying changes cell state. guide provide step--step overview key functions within Statial.","code":""},{"path":"/articles/Statial.html","id":"evaluating-cell-localisation","dir":"Articles","previous_headings":"","what":"Evaluating cell localisation","title":"Statial","text":"Konditional method evaluate localisation relationship two cell types image. Konditional builds L-function contextualising relationship two cell types reference typical spatial behaviour \\(3^{rd}\\) cell type/population. taking approach, Konditional invariant changes window image well tissue structures may present. definitions cell types cell states somewhat ambiguous, cell types imply well defined groups cells serve different roles one another, hand cell states imply cells dynamic entity discretised, thus exist continuum. purposes using Konditional treat cell states identified clusters cells, larger clusters represent “parent” cell population, finer sub-clusters representing “child” cell population. example CD4 T cell may considered child larger parent population Immune cells. Konditional thus aims see child population cells deviate spatial behaviour parent population, influences localisation child cell state another cell state.","code":""},{"path":"/articles/Statial.html","id":"loading-example-data","dir":"Articles","previous_headings":"","what":"Loading example data","title":"Statial","text":"following analyse cutaneous squamous cell carcinoma data head neck region (Ferguson et al. 2022). images stored SingleCellExperiment object. first step analysing images organise cells present cell state populations clusters, e.g. different B cell types put vector called bcells.","code":"# Load head and neck data data(\"headSCE\")  # Examine all cell types in image unique(headSCE$cellType) #>  [1] EC1       SC7       MC3       Undefined BC3       SC1       SC2       #>  [8] EP        SC4       BC2       TC_CD4    SC5       EC2       BC1       #> [15] SC3       MC2       GC        SC6       MC1       TC_CD8    #> 20 Levels: BC1 BC2 BC3 EC1 EC2 EP GC MC1 MC2 MC3 SC1 SC2 SC3 SC4 SC5 ... Undefined  # Set up cell populations tumour <- c(\"SC1\", \"SC2\", \"SC3\", \"SC4\", \"SC5\", \"SC6\", \"SC7\")  bcells <- c(\"BC1\", \"BC2\", \"BC3\") tcells <- c(\"TC_CD4\", \"TC_CD8\") myeloid <- c(\"MC1\", \"MC2\", \"MC3\")  endothelial <- c(\"EC1\", \"EC2\") epithelial <- c(\"EP\")  tissue <- c(endothelial, epithelial) immune <- c(bcells, tcells, myeloid, \"GC\") # GC = granulocytes  all <- c(tumour, tissue, immune, \"Undefined\")"},{"path":"/articles/Statial.html","id":"konditional","dir":"Articles","previous_headings":"","what":"Konditional","title":"Statial","text":"Konditional accepts SingleCellExperiment object, single image, list images SingleCellExperiment object, gets passed cells argument. two cell types evaluated specified arguments. parent population must also specified parent argument, note parent cell population must include cell type. argument r specify radius cell relationship evaluated . Konditional supports parallel processing, number cores can specified using cores argument. Konditional can take single value multiple values argument test combinations arguments specified. test relationship CD4 T cells (TC_CD4) one type Tumour cell (SC1) immune cells parent population. output data frame original L-function values konditional values well values arguments specified. negative original konditional value represents dispersion TC_CD4 SC1 positive value indicates localisation. original konditional values can compared scatter plot identify relationships identified differently functions. dashed red line represents expected pattern data, .e. exists relationship two cell types. top left quadrant therefore represents values Konditional identified localisation CD4 SC1 original L-function identified dispersion, opposite true bottom right quadrant.  Alternatively pairwise cell relationships corresponding parent dataset can tested. data frame pairwise combinations can creating using parentCombinations function. function takes vector cells, well parent vectors set earlier. shown output data frame specifying , , parent arguments Konditional. Rather specifying , , parent Konditional, output parentCombinations can inputed Konditional using parentDf argument. test first 20 pairwise cell relationships parentCombinations first image dataset. #RsCurve examine image relationship 2 cell types depends parent cell population. breast cancer image obtained Keren et al, 2018 patient 6. image can see p53 Immune dispersed. However behaviour p53 placed context spatial behaviour parent population Keratin+Tumour, p53 Immune now appear localised.  rsCurve function plots L-function value Konditional values range radii. points lie red line (expected pattern) localisation indicated radius, points lie red line dispersion indicated. seen following plot Konditional able correctly identify localisation p53 Immune example image certain range radii. radius gets large overall relationship p53 Immune looks dispersed. original L-function able identify localisation value radii.","code":"CD4_Konditional <- Konditional(   cells = headSCE,   r = 50,   from = \"TC_CD4\",   to = \"SC1\",   parent = immune,   cores = 1 )  head(CD4_Konditional) #>   imageID        test  original konditional  r weightQuantile inhom  edge #> 1       1 TC_CD4__SC1 -4.990157 -4.87036888 50            0.8  TRUE FALSE #> 2       5 TC_CD4__SC1 -5.122654 -0.02746783 50            0.8  TRUE FALSE #> 3       6 TC_CD4__SC1 -7.945885 -4.75753347 50            0.8  TRUE FALSE #> 4       7 TC_CD4__SC1 -1.301764  1.84603274 50            0.8  TRUE FALSE #> 5       8 TC_CD4__SC1  4.951783  3.33973263 50            0.8  TRUE FALSE #>   includeZeroCells window window.length #> 1             TRUE convex            NA #> 2             TRUE convex            NA #> 3             TRUE convex            NA #> 4             TRUE convex            NA #> 5             TRUE convex            NA ggplot(CD4_Konditional, aes(x = original, y = konditional, col = imageID)) +   geom_point(size = 2) +   geom_hline(yintercept = 0, col = \"red\", linetype = \"dashed\") +   geom_vline(xintercept = 0, col = \"red\", linetype = \"dashed\") +   theme(     axis.title.x = element_text(size = 14),     axis.text.x = element_text(size = 10),     axis.text.y = element_text(size = 10),     axis.title.y = element_text(size = 14)   ) # Get all relationships between cell types and their parents parentDf <- parentCombinations(   all = all,   tumour,   bcells,   tcells,   myeloid,   endothelial,   epithelial,   tissue,   immune ) head(parentDf) #>   from  to       parent parent_name #> 1  BC1 SC1 BC1, BC2....      bcells #> 2  BC1 SC2 BC1, BC2....      bcells #> 3  BC1 SC3 BC1, BC2....      bcells #> 4  BC1 SC4 BC1, BC2....      bcells #> 5  BC1 SC5 BC1, BC2....      bcells #> 6  BC1 SC6 BC1, BC2....      bcells # Selecting Image 1 as an example image_1 <- headSCE |>   colData() |>   data.frame() |>   filter(imageID == \"1\")   image1_Konditional <- Konditional(   cells = image_1,   parentDf = parentDf[1:20, ],   r = 50,   cores = 1 )  head(image1_Konditional) #>   imageID             test   original konditional  r weightQuantile inhom  edge #> 1       1 BC1__SC1__bcells  0.5812206    4.630450 50            0.8  TRUE FALSE #> 2       1 BC1__SC2__bcells -7.1248136   -8.571246 50            0.8  TRUE FALSE #> 3       1 BC1__SC3__bcells -9.0872476  -10.469486 50            0.8  TRUE FALSE #> 4       1 BC1__SC4__bcells  1.3391851   -1.813705 50            0.8  TRUE FALSE #> 5       1 BC1__SC5__bcells  6.9660272    5.263392 50            0.8  TRUE FALSE #> 6       1 BC1__SC6__bcells -8.5564596   -4.657076 50            0.8  TRUE FALSE #>   includeZeroCells window window.length #> 1             TRUE convex            NA #> 2             TRUE convex            NA #> 3             TRUE convex            NA #> 4             TRUE convex            NA #> 5             TRUE convex            NA #> 6             TRUE convex            NA data(\"kerenImage\")  kerenImage |>   filter(cellType %in% c(\"Keratin+Tumour\", \"Immune\", \"p53\")) |>   arrange(cellType) |>   ggplot(aes(x = x, y = y, color = cellType)) +   geom_point(size = 1) +   scale_colour_manual(values = c(\"#505050\", \"#D6D6D6\", \"#64BC46\")) rsDf <- rsCurve(   cells = kerenImage,   from = \"p53\",   to = \"Immune\",   parent = c(\"p53\", \"Keratin+Tumour\"),   rs = seq(10, 510, 100),   cores = 1 )   ggplotRs(rsDf)"},{"path":"/articles/Statial.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Statial","text":"Ferguson, . L., Sharman, . R., Allen, R. O., Ye, T., Lee, J. H., Low, T.-H. H., Ch’ng, S., Palme, C. E., Ashford, B., Ranson, M., Clark, J. R., Patrick, E., Gupta, R., & Palendira, U. (2022). High-Dimensional Spatial Analysis Reveals Immune Landscape–Dependent Progression Cutaneous Squamous Cell Carcinoma. Clinical Cancer Research, OF1-OF12. (DOI) Keren, L., Bosse, M., Marquez, D., Angoshtari, R., Jain, S., Varma, S., Yang, S. R., Kurian, ., Van Valen, D., West, R., Bendall, S. C., & Angelo, M. (2018). Structured Tumor-Immune Microenvironment Triple Negative Breast Cancer Revealed Multiplexed Ion Beam Imaging. Cell, 174(6), 1373-1387.e1319. (DOI)","code":""},{"path":"/articles/Statial.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"sessionInfo","title":"Statial","text":"","code":"sessionInfo() #> R version 4.2.2 (2022-10-31) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: EndeavourOS #>  #> Matrix products: default #> BLAS:   /usr/lib/libblas.so.3.10.1 #> LAPACK: /usr/lib/liblapack.so.3.10.1 #>  #> locale: #>  [1] LC_CTYPE=en_AU.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_AU.UTF-8        LC_COLLATE=en_AU.UTF-8     #>  [5] LC_MONETARY=en_AU.UTF-8    LC_MESSAGES=en_AU.UTF-8    #>  [7] LC_PAPER=en_AU.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_AU.UTF-8 LC_IDENTIFICATION=C        #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] SingleCellExperiment_1.20.0 SummarizedExperiment_1.28.0 #>  [3] Biobase_2.58.0              GenomicRanges_1.50.1        #>  [5] GenomeInfoDb_1.34.2         IRanges_2.32.0              #>  [7] S4Vectors_0.36.0            BiocGenerics_0.44.0         #>  [9] MatrixGenerics_1.10.0       matrixStats_0.62.0          #> [11] forcats_0.5.2               stringr_1.4.1               #> [13] dplyr_1.0.10                purrr_0.3.5                 #> [15] readr_2.1.3                 tidyr_1.2.1                 #> [17] tibble_3.1.8                ggplot2_3.4.0               #> [19] tidyverse_1.3.2             Statial_0.99.5              #> [21] BiocStyle_2.26.0            #>  #> loaded via a namespace (and not attached): #>   [1] googledrive_2.0.0      colorspace_2.0-3       deldir_1.0-6           #>   [4] ellipsis_0.3.2         rprojroot_2.0.3        XVector_0.38.0         #>   [7] fftwtools_0.9-11       fs_1.5.2               spatstat.data_3.0-0    #>  [10] farver_2.1.1           fansi_1.0.3            lubridate_1.9.0        #>  [13] xml2_1.3.3             codetools_0.2-18       splines_4.2.2          #>  [16] cachem_1.0.6           knitr_1.40             polyclip_1.10-4        #>  [19] jsonlite_1.8.3         broom_1.0.1            dbplyr_2.2.1           #>  [22] spatstat.linnet_2.3-2  spatstat.sparse_3.0-0  BiocManager_1.30.19    #>  [25] compiler_4.2.2         httr_1.4.4             backports_1.4.1        #>  [28] assertthat_0.2.1       Matrix_1.5-1           fastmap_1.1.0          #>  [31] gargle_1.2.1           cli_3.4.1              htmltools_0.5.3        #>  [34] tools_4.2.2            gtable_0.3.1           glue_1.6.2             #>  [37] GenomeInfoDbData_1.2.9 spatstat_2.3-4         cellranger_1.1.0       #>  [40] jquerylib_0.1.4        pkgdown_2.0.6          vctrs_0.5.0            #>  [43] nlme_3.1-160           spatstat.random_3.0-1  xfun_0.34              #>  [46] rvest_1.0.3            timechange_0.1.1       lifecycle_1.0.3        #>  [49] googlesheets4_1.0.1    goftest_1.2-3          zlibbioc_1.44.0        #>  [52] scales_1.2.1           spatstat.core_2.4-4    ragg_1.2.4             #>  [55] hms_1.1.2              spatstat.utils_3.0-1   parallel_4.2.2         #>  [58] yaml_2.3.6             curl_4.3.3             memoise_2.0.1          #>  [61] sass_0.4.2             rpart_4.1.19           stringi_1.7.8          #>  [64] highr_0.9              desc_1.4.2             BiocParallel_1.32.1    #>  [67] rlang_1.0.6            pkgconfig_2.0.3        systemfonts_1.0.4      #>  [70] bitops_1.0-7           evaluate_0.18          lattice_0.20-45        #>  [73] tensor_1.5             labeling_0.4.2         tidyselect_1.2.0       #>  [76] magrittr_2.0.3         bookdown_0.29          R6_2.5.1               #>  [79] generics_0.1.3         DelayedArray_0.24.0    DBI_1.1.3              #>  [82] withr_2.5.0            pillar_1.8.1           haven_2.5.1            #>  [85] mgcv_1.8-41            abind_1.4-5            RCurl_1.98-1.9         #>  [88] crayon_1.5.2           modelr_0.1.9           utf8_1.2.2             #>  [91] spatstat.geom_3.0-3    tzdb_0.3.0             rmarkdown_2.17         #>  [94] grid_4.2.2             readxl_1.4.1           data.table_1.14.4      #>  [97] reprex_2.0.2           digest_0.6.30          textshaping_0.3.6      #> [100] munsell_0.5.0          concaveman_1.1.0       bslib_0.4.1"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Farhan Ameen. Author, maintainer. Sourish Iyengar. Author. Shila Ghazanfar. Author. Ellis Patrick. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ameen F, Iyengar S, Ghazanfar S, Patrick E (2022). Statial: package identify changes cell state relative spatial associations. R package version 0.99.5.","code":"@Manual{,   title = {Statial: A package to identify changes in cell state relative to spatial associations},   author = {Farhan Ameen and Sourish Iyengar and Shila Ghazanfar and Ellis Patrick},   year = {2022},   note = {R package version 0.99.5}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A package to identify changes in cell state relative to spatial associations","text":"Statial suite functions identifying changes cell state. functionality provided Statial provides robust quantification cell type localisation invariant changes tissue structure. addition Statial uncovers changes marker expression associated varying levels localisation. features can used explore structure function different cell types may altered agents surrounded .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A package to identify changes in cell state relative to spatial associations","text":"Installing package Bioconductor. Otherwise, install development version GitHub.","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"Statial\") # Install the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"SydneyBioX/Statial\") library(Statial)"},{"path":"/index.html","id":"submitting-an-issue-or-feature-request","dir":"","previous_headings":"Installation","what":"Submitting an issue or feature request","title":"A package to identify changes in cell state relative to spatial associations","text":"Statial still active development. greatly appreciate feedback related package. R package related issues raised . general questions feedback, please contact us directly via ellis.patrick@sydney.edu.au.","code":""},{"path":"/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"A package to identify changes in cell state relative to spatial associations","text":"Farhan Ameen Sourish Iyengar Shila Ghazanfar - @shazanfar Ellis Patrick - @TheEllisPatrick","code":""},{"path":"/reference/Konditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of pairwise cell relationships, conditional on a 3rd population. — Konditional","title":"Evaluation of pairwise cell relationships, conditional on a 3rd population. — Konditional","text":"Konditional identifies relationship two cell types  conditional spatial behaviour 3rd cell population,  particular radius (r).","code":""},{"path":"/reference/Konditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of pairwise cell relationships, conditional on a 3rd population. — Konditional","text":"","code":"Konditional(   cells,   parentDf = NULL,   r,   from = NULL,   to = NULL,   parent = NULL,   inhom = TRUE,   edgeCorrect = FALSE,   window = \"convex\",   window.length = NA,   weightQuantile = 0.8,   includeZeroCells = TRUE,   includeOriginal = TRUE,   spatialCoords = c(\"x\", \"y\"),   cellType = \"cellType\",   imageID = \"imageID\",   cores = 1 )"},{"path":"/reference/Konditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of pairwise cell relationships, conditional on a 3rd population. — Konditional","text":"cells SingleCellExperiment, SpatialExperiment list  data.frames containing columns specifying imageID, cellType, x y  spatial coordinates. parentDf data frame parentCombinations r Radius evaluated pairwise relationships cells. first cell type evaluated pairwise relationship. second cell type evaluated pairwise relationship. parent parent population cell type (must include cell type). inhom logical value indicating whether account inhomogeneity. edgeCorrect logical value indicating whether perform edge correction. window Type window data, either `square`, `convex` `concave`, passed makeWindow window.length tuning parameter controlling level concavity estimating concave windows. Passed makeWindow weightQuantile decimal value indicating quantile parent density used weight `` cells. includeZeroCells logical value indicating whether include cells zero counts pairwise association calculation. includeOriginal logical value return original L function values along konditional values. spatialCoords columns contain x y spatial coordinates. cellType column contains cell types. imageID column contains image identifiers. cores Number cores parallel processing.","code":""},{"path":"/reference/Konditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of pairwise cell relationships, conditional on a 3rd population. — Konditional","text":"Koditional result object","code":""},{"path":"/reference/Konditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of pairwise cell relationships, conditional on a 3rd population. — Konditional","text":"","code":"# Load data data(\"headSCE\")  CD4_Konditional <- Konditional(   cells = headSCE,   r = 50,   from = \"TC_CD4\",   to = \"SC5\",   parent = c(\"TC_CD4\", \"TC_CD8\"),   cores = 40 )   head(CD4_Konditional) #>   imageID        test  original konditional  r weightQuantile inhom  edge #> 1       1 TC_CD4__SC5 -11.50459    -1.94470 50            0.8  TRUE FALSE #> 2       5 TC_CD4__SC5 -15.07237     1.37433 50            0.8  TRUE FALSE #> 3       6 TC_CD4__SC5 -16.45579    12.28765 50            0.8  TRUE FALSE #> 4       7 TC_CD4__SC5 -17.68033   -11.51087 50            0.8  TRUE FALSE #> 5       8 TC_CD4__SC5 -15.78141    11.89574 50            0.8  TRUE FALSE #>   includeZeroCells window window.length #> 1             TRUE convex            NA #> 2             TRUE convex            NA #> 3             TRUE convex            NA #> 4             TRUE convex            NA #> 5             TRUE convex            NA"},{"path":"/reference/ggplotRs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting the original and konditional L values over a range of radii. — ggplotRs","title":"Plotting the original and konditional L values over a range of radii. — ggplotRs","text":"function takes outputs rsCurve plots ggplot. standard deviation estimated rsCurve, confidence intervals constructed based standard deviation. confidence interval overlaps 0, relationship insignificant  radius.","code":""},{"path":"/reference/ggplotRs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting the original and konditional L values over a range of radii. — ggplotRs","text":"","code":"ggplotRs(rsDf)"},{"path":"/reference/ggplotRs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting the original and konditional L values over a range of radii. — ggplotRs","text":"rsDf data frame rsCurve.","code":""},{"path":"/reference/ggplotRs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting the original and konditional L values over a range of radii. — ggplotRs","text":"ggplotly object showing original konditional L function  values range radii","code":""},{"path":"/reference/ggplotRs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting the original and konditional L values over a range of radii. — ggplotRs","text":"","code":"data(\"kerenImage\")  rsDf <- rsCurve(   cells = kerenImage,   from = \"p53\",   to = \"Immune\",   parent = c(\"p53\", \"Keratin+Tumour\"),   rs = seq(10, 510, 100),   cores = 40 )  ggplotRs(rsDf)"},{"path":"/reference/headSCE.html","id":null,"dir":"Reference","previous_headings":"","what":"Head and neck cutaneous squamous cell carcinoma IMC data — headSCE","title":"Head and neck cutaneous squamous cell carcinoma IMC data — headSCE","text":"subset imaging mass cytometry dataset head neck cutaneous  squamous cell carcinoma Ferguson et al 2022. object contains 5 images.","code":""},{"path":"/reference/headSCE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Head and neck cutaneous squamous cell carcinoma IMC data — headSCE","text":"","code":"data(headSCE)"},{"path":"/reference/headSCE.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Head and neck cutaneous squamous cell carcinoma IMC data — headSCE","text":"headData SingleCellExperiment object","code":""},{"path":"/reference/headSCE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Head and neck cutaneous squamous cell carcinoma IMC data — headSCE","text":"Ferguson, . L., Sharman, . R., Allen, R. O., Ye, T., Lee, J. H., Low, T.-H. H., Ch'ng, S., Palme, C. E., Ashford, B., Ranson, M., Clark, J. R., Patrick, E., Gupta, R., & Palendira, U. (2022). High-Dimensional Spatial Analysis Reveals Immune Landscape–Dependent Progression Cutaneous Squamous Cell Carcinoma. Clinical Cancer Research, OF1-OF12. ([DOI](https://doi.org/10.1158/1078-0432.Ccr-22-1332))","code":""},{"path":"/reference/kerenImage.html","id":null,"dir":"Reference","previous_headings":"","what":"MIBI-TOF Breast cancer image — kerenImage","title":"MIBI-TOF Breast cancer image — kerenImage","text":"single MIBI-TOF image breast cancer patient 6 Keren et al 2018 dataset.","code":""},{"path":"/reference/kerenImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MIBI-TOF Breast cancer image — kerenImage","text":"","code":"data(kerenImage)"},{"path":"/reference/kerenImage.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MIBI-TOF Breast cancer image — kerenImage","text":"headData SingleCellExperiment object","code":""},{"path":"/reference/kerenImage.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"MIBI-TOF Breast cancer image — kerenImage","text":"Keren, L., Bosse, M., Marquez, D., Angoshtari, R., Jain, S., Varma, S., Yang, S. R., Kurian, ., Van Valen, D., West, R., Bendall, S. C., & Angelo, M. (2018). Structured Tumor-Immune Microenvironment Triple Negative Breast Cancer Revealed Multiplexed Ion Beam Imaging. Cell, 174(6), 1373-1387.e1319. ([DOI](https://doi.org/10.1016/j.cell.2018.08.039))","code":""},{"path":"/reference/makeWindow.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a window for a PPP object — makeWindow","title":"Creates a window for a PPP object — makeWindow","text":"function creates window `spatstat::ppp` object, type  window can specified using `window` argument.","code":""},{"path":"/reference/makeWindow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a window for a PPP object — makeWindow","text":"","code":"makeWindow(data, window = \"square\", window.length = NULL)"},{"path":"/reference/makeWindow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a window for a PPP object — makeWindow","text":"data single image data frame SingleCellExperiment object PPP object. window shape window around regions, can `square`, `convex` `concave` window.length tuning parameter controlling level concavity estimating concave windows.","code":""},{"path":"/reference/makeWindow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a window for a PPP object — makeWindow","text":"Creates `owin` class, representing observation window image.","code":""},{"path":"/reference/makeWindow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a window for a PPP object — makeWindow","text":"","code":"data <- data.frame(x = rnorm(10), y = rnorm(10)) ow <- makeWindow(data, window = \"square\")  spatstat.geom::ppp(x = data$x, y = data$y, window = ow) #> Planar point pattern: 10 points #> window: rectangle = [-1.2409969, 1.8590051] x [-1.1301091, 0.9421314] units"},{"path":"/reference/parentCombinations.html","id":null,"dir":"Reference","previous_headings":"","what":"Create all combinations of cell type relationships from a list of parents — parentCombinations","title":"Create all combinations of cell type relationships from a list of parents — parentCombinations","text":"function takes named vectors parent populations  dataset, creates data frame containing pairwise cell relationships, data frame can inputed `parentDf` argument `Konditional`.","code":""},{"path":"/reference/parentCombinations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create all combinations of cell type relationships from a list of parents — parentCombinations","text":"","code":"parentCombinations(all, ...)"},{"path":"/reference/parentCombinations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create all combinations of cell type relationships from a list of parents — parentCombinations","text":"list `` cell types Konditional evaluated ... Vectors parent population","code":""},{"path":"/reference/parentCombinations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create all combinations of cell type relationships from a list of parents — parentCombinations","text":"data frame containing pairwise cell relationships corresponding parent","code":""},{"path":"/reference/parentCombinations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create all combinations of cell type relationships from a list of parents — parentCombinations","text":"","code":"tcells <- c(\"CD4\", \"CD8\") tissue <- c(\"epithelial\", \"stromal\") allCells <- c(\"tumour\", tissue, tcells)  parentCombinations(all = allCells, tcells, tissue) #>          from         to       parent parent_name #> 1         CD4     tumour     CD4, CD8      tcells #> 2         CD4 epithelial     CD4, CD8      tcells #> 3         CD4    stromal     CD4, CD8      tcells #> 4         CD4        CD8     CD4, CD8      tcells #> 5         CD8     tumour     CD4, CD8      tcells #> 6         CD8 epithelial     CD4, CD8      tcells #> 7         CD8    stromal     CD4, CD8      tcells #> 8         CD8        CD4     CD4, CD8      tcells #> 9  epithelial     tumour epitheli....      tissue #> 10 epithelial    stromal epitheli....      tissue #> 11 epithelial        CD4 epitheli....      tissue #> 12 epithelial        CD8 epitheli....      tissue #> 13    stromal     tumour epitheli....      tissue #> 14    stromal epithelial epitheli....      tissue #> 15    stromal        CD4 epitheli....      tissue #> 16    stromal        CD8 epitheli....      tissue"},{"path":"/reference/relabelKonditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell permutation for Konditional — relabelKonditional","title":"Cell permutation for Konditional — relabelKonditional","text":"Function randomises specified cells image calculates `Konditional` value. can used estimate null distribution,  parent cell population significance testing. function relabels specified cells within single image,  estimate null distribution cell population specified.","code":""},{"path":"/reference/relabelKonditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell permutation for Konditional — relabelKonditional","text":"","code":"relabelKonditional(   cells,   nSim = 1,   r,   from,   to,   parent,   returnImages = FALSE,   inhom = TRUE,   edge = FALSE,   cores = 1,   ... )  relabel(image, labels = NULL)"},{"path":"/reference/relabelKonditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell permutation for Konditional — relabelKonditional","text":"cells single image data frame SingleCellExperiment object nSim Number randomisations calculated. r Radius evaluated pairwise relationships cells. first cell type evaluated pairwise relationship. second cell type evaluated pairwise relationship. parent parent population cell type (must include cell type). returnImages logical value indicate whether function return randomised images along Konditional values. inhom logical value indicating whether account inhomogeneity. edge logical value indicating whether perform edge correction. cores Number cores parallel processing. ... arguments passed Konditional image single image Single Cell Experiment object. labels vector CellTypes labels permuted NULL cells labels radomised.","code":""},{"path":"/reference/relabelKonditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell permutation for Konditional — relabelKonditional","text":"data frame containing Konditional value randomised image. `returnImages = TRUE` function return list Konditional values randomised images. data frame containing pairwise cell relationships corresponding parent","code":""},{"path":"/reference/relabelKonditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell permutation for Konditional — relabelKonditional","text":"","code":"data(\"kerenImage\")  relabelResult <- relabelKonditional(   cells = kerenImage,   nSim = 5,   r = 250,   from = \"p53\",   to = \"Immune\",   parent = c(\"p53\", \"Keratin+Tumour\"),   cores = 40 )  data(\"kerenImage\")  # Permute CD8 T cells and T cell labels in the image relabeledImage <- relabel(kerenImage, labels = c(\"p53\", \"Keratin+Tumour\")) plot(relabeledImage)"},{"path":"/reference/rsCurve.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of Konditional over a range of radii. — rsCurve","title":"Evaluation of Konditional over a range of radii. — rsCurve","text":"function obtains `Kondtional` values range radii, standard  deviations value can obtained using permutation significance  testing. obtain estimates standard deviations specify `se = TRUE`.","code":""},{"path":"/reference/rsCurve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of Konditional over a range of radii. — rsCurve","text":"","code":"rsCurve(   cells,   from,   to,   parent,   rs = seq(10, 100, 10),   inhom = TRUE,   edge = FALSE,   se = FALSE,   nSim = 20,   cores = 1,   ... )"},{"path":"/reference/rsCurve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of Konditional over a range of radii. — rsCurve","text":"cells single image data frame SingleCellExperiment object first cell type evaluated pairwise relationship. second cell type evaluated pairwise relationship. parent parent population cell type (must include cell type). rs vector radii evaluate konditional . inhom logical value indicating whether perform inhomogeneous L function. edge logical value indicating whether perform edge correction. se logical value indicate standard deviation konditional calculated construct error bars. nSim Number randomisations perform using relabelKonditional, used calculated SE. cores Number cores parallel processing. ... arguments passed Konditional.","code":""},{"path":"/reference/rsCurve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of Konditional over a range of radii. — rsCurve","text":"data frame original L values Konditional values evaluated range radii.","code":""},{"path":"/reference/rsCurve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of Konditional over a range of radii. — rsCurve","text":"","code":"data(\"kerenImage\")  rsDf <- rsCurve(   cells = kerenImage,   from = \"p53\",   to = \"Immune\",   parent = c(\"p53\", \"Keratin+Tumour\"),   rs = seq(10, 510, 100),   cores = 40 )"}]
